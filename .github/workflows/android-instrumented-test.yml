name: Android Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ANDROID_SDK_ROOT: $HOME/android-sdk

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'   
        distribution: 'temurin'

    - name: Install Android SDK & Create AVD
      run: |
        sudo apt update
        sudo apt install -y wget unzip
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
        unzip commandlinetools-linux-7302050_latest.zip -d tools
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$PATH
  
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86_64" "emulator"
  
        echo no | avdmanager --sdk_root=$ANDROID_SDK_ROOT create avd -n test_avd -k "system-images;android-30;google_apis;x86_64" --force
  
    - name: Start Emulator
      run: |
        $ANDROID_SDK_ROOT/emulator/emulator -list-avds
        nohup $ANDROID_SDK_ROOT/emulator/emulator -avd test_avd -no-window -no-audio -gpu off -verbose &
        $ANDROID_SDK_ROOT/platform-tools/adb wait-for-device
        sleep 60

    - name: Make gradlew executable
      run: chmod +x gradlew
      working-directory: ./LoginTestApp

    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./LoginTestApp

    - name: Run Unit Tests
      run: ./gradlew test
      working-directory: ./LoginTestApp

    - name: Run Instrumented Tests
      run: ./gradlew connectedCheck
      working-directory: ./LoginTestApp
